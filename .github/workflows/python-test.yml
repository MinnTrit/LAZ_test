name: CI Workflow

on: 
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    test:
        name: Test python code
        #The environment to execute the job
        runs-on: ubuntu-latest
        
        #Initialize the steps to run the tasks
        steps:
            - name: Checkout the code
              uses: actions/checkout@v2

            - name: Set up Python
              uses: actions/setup-python@v2
              with:
                python-version: '3.8'

            - name: Install Python's Libraries
              run: |
                python -m pip install --upgrade pip
                pip install fuzzywuzzy
                pip install pandas
                pip install playwright
                playwright install

            - name: Set up environment variables
              run: echo "CHROMIUM_PATH=/home/runner/.cache/ms-playwright/chromium-1129/chrome-linux" >> $GITHUB_ENV

            - name: Install Additional GI Libraries
              run: |
                sudo apt-get update
                sudo apt-get install -y libvpx7 libevent-2.1-7 libopus0 \
                libgstreamer-plugins-base1.0-0 libgstreamer1.0-0 libharfbuzz0b \
                libhyphen0 libmanette-0.2-0 libflite1 libgles2-mesa

            - name: Current directory
              run: pwd

            - name: Run tests
              run: python test_scrapping.py

            - name: Save result artifacts
              uses: actions/upload-artifact@v3
              with:
                name: test-results
                path: result.log
    build:
        name: Build and analyze
        runs-on: ubuntu-latest

        steps:
          - uses: actions/checkout@v4
            with: 
              fetch-depth: 0
          - uses: sonarsource/sonarqube-scan-action@master
            env:
              SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
              SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }} 
              INPUT_ARGS: |
                  -Dsonar.projectKey=${{ secrets.SONAR_TOKEN }}
                  -Dsonar.language=python
